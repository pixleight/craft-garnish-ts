{"version":3,"file":"606.js","mappings":"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","sources":["webpack:///../../../node_modules/codemirror/addon/search/searchcursor.js","webpack:///../../../node_modules/codemirror/addon/edit/matchbrackets.js","webpack:///../../../node_modules/codemirror/keymap/sublime.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) &&\n    (document.documentMode == null || document.documentMode < 8);\n\n  var Pos = CodeMirror.Pos;\n\n  var matching = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\"};\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor\n    if (afterCursor == null)\n      afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className)\n    var re = bracketRegex(config)\n\n    // A cursor is defined as between two characters, but in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n    var match = (!afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)]) ||\n        re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && (dir > 0) != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n    if (found == null) return null;\n    return {from: Pos(where.line, pos), to: found && found.pos,\n            match: found && found.ch == match.charAt(0), forward: dir > 0};\n  }\n\n  // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = (config && config.maxScanLineLength) || 10000;\n    var maxScanLines = (config && config.maxScanLines) || 1000;\n\n    var stack = [];\n    var re = bracketRegex(config)\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1)\n                          : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n        if (re.test(ch) && (style === undefined ||\n                            (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n          var match = matching[ch];\n          if (match && (match.charAt(1) == \">\") == (dir > 0)) stack.push(ch);\n          else if (!stack.length) return {pos: Pos(lineNo, pos), ch: ch};\n          else stack.pop();\n        }\n      }\n    }\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000,\n      highlightNonMatching = config && config.highlightNonMatching;\n    var marks = [], ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n      if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {className: style}));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n          marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {className: style}));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textarea whenever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function() {\n        cm.operation(function() {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n      if (autoclear) setTimeout(clear, 800);\n      else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function() {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  function clearHighlighted(cm) {\n    if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n      cm.state.matchBrackets.currentlyHighlighted();\n      cm.state.matchBrackets.currentlyHighlighted = null;\n    }\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets)\n      cm.off(\"blur\", clearHighlighted)\n      clearHighlighted(cm);\n    }\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets)\n      cm.on(\"blur\", clearHighlighted)\n    }\n  });\n\n  CodeMirror.defineExtension(\"matchBrackets\", function() {matchBrackets(this, true);});\n  CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig){\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {strict: true} : null\n      } else {\n        oldConfig.strict = config\n        config = oldConfig\n      }\n    }\n    return findMatchingBracket(this, pos, config)\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config){\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"names":["CodeMirror","doFold","noFold","Pos","ensureFlags","regexp","flags","current","ignoreCase","global","multiline","regexpFlags","target","i","length","indexOf","charAt","RegExp","source","maybeMultiline","test","searchRegexpForward","doc","start","line","ch","last","lastLine","lastIndex","string","getLine","match","exec","from","index","to","searchRegexpForwardMultiline","chunk","curLine","before","slice","split","inside","startLine","startCh","lastMatchIn","endMargin","newMatch","end","searchRegexpBackward","first","firstLine","searchRegexpBackwardMultiline","chunkSize","adjustPos","orig","folded","pos","foldFunc","min","max","Math","mid","len","searchStringForward","query","caseFold","fold","lines","search","found","cutFrom","endString","searchStringBackward","lastIndexOf","top","topString","SearchCursor","options","this","atOccurrence","afterEmptyMatch","clipPos","matches","reverse","String","prototype","normalize","str","toLowerCase","findNext","find","findPrevious","head","cmpPos","result","replace","newText","origin","splitLines","replaceRange","defineExtension","defineDocExtension","ranges","cur","getSearchCursor","getCursor","push","anchor","setSelections","mod","ie_lt8","navigator","userAgent","document","documentMode","matching","bracketRegex","config","findMatchingBracket","cm","where","getLineHandle","afterCursor","getWrapperElement","className","re","text","dir","strict","style","getTokenTypeAt","scanForBracket","forward","maxScanLen","maxScanLineLength","maxScanLines","stack","lineEnd","lineNo","undefined","pop","matchBrackets","autoclear","maxHighlightLen","state","maxHighlightLineLength","highlightNonMatching","marks","listSelections","empty","markText","focused","focus","clear","operation","setTimeout","doMatchBrackets","currentlyHighlighted","clearHighlighted","defineOption","val","old","Init","off","on","oldConfig","cmds","commands","moveSubword","extendSelectionsBy","range","display","shift","extend","type","startPos","e","next","cat","isWordChar","toUpperCase","findPosSubword","insertLine","above","isReadOnly","Pass","newSelection","at","indentLine","execCommand","wordAt","word","addCursorToSelection","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","clientHeight","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","lineRanges","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLineAfter","insertLineBefore","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","getRange","isSelectedRange","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToPrevLine","addCursorToNextLine","mirror","selectBetweenBrackets","opening","closing","puncType","sortLines","caseSensitive","direction","selected","toSort","sort","a","b","au","bu","modifyWordOrSelection","indices","replacements","replaceSelections","getTarget","findAndGoTo","selectScope","goToBracket","prev","swapLineUp","linesToMove","newSels","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","duplicateLine","rangeCount","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","sublimeBookmarks","prevBookmark","unshift","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","k","splice","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","downcaseAtCursor","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findUnderPrevious","findAllUnder","primaryIndex","keyMap","macSublime","normalizeKeyMap","pcSublime","mac","default","macDefault","sublime"],"sourceRoot":""}